package note.application

import note.domain.Description
import note.domain.Note
import note.domain.NotePrimitives
import note.domain.NoteRepository
import note.domain.Title
import shared.domain.Identifier
import shared.domain.exceptions.InvalidUUIDException
import note.domain.exceptions.IllegalTitleException

class NoteSaver(
    private val repository: NoteRepository
) {

    /***
     * Creates a Note with the identifier generated by the identifierGenerator instance and
     * saves it to the given repository.
     * @throws InvalidUUIDException if the note id from the primitives isn't valid
     * @throws IllegalTitleException if the title isn't valid
     * @see NotePrimitives
     * @see Note
     * @return The saved note instance
     */
    fun save(note: NotePrimitives): Note {
        val newNote = Note(
            id = Identifier(note.noteId),
            title = Title(note.title),
            description = note.description?.let { Description(it) })
        repository.save(newNote)
        return newNote
    }
}
